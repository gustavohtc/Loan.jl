var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Loan","category":"page"},{"location":"#Loan","page":"Home","title":"Loan","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Loan.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Loan]","category":"page"},{"location":"#Loan.amount_paid-Tuple{Loan.Installment, Dates.Date, Number}","page":"Home","title":"Loan.amount_paid","text":"amount_paid(loan::LoanAgreement,installment::Installment,date::Dates.Date,payment::Pair{Dates.Date,Float64})\n\nReturn the amount already paid of a installment until a date.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.days_between-Tuple{Dates.Date, Dates.Date}","page":"Home","title":"Loan.days_between","text":"days_between(dates::AbstractVector{Dates.Date},initialDate::Dates.Date)\n\n\n\n\n\n","category":"method"},{"location":"#Loan.due_dates-Union{Tuple{T}, Tuple{Dates.Date, Number}, Tuple{Dates.Date, Number, Union{Symbol, T}}} where T<:BusinessDays.HolidayCalendar","page":"Home","title":"Loan.due_dates","text":"due_dates(initialDate::Dates.Date,nper::Number,calendar::Symbol;period=Dates.Month,grace=0)\n\nReturn nper of due dates after initialDate + grace period (in days) that is a business day in calendar\n\n\n\n\n\n","category":"method"},{"location":"#Loan.factor_price-Tuple{Any, Any}","page":"Home","title":"Loan.factor_price","text":"factor_price(rate,qtPeriods,qtPeriodsFirst)\n\n.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.installment-Tuple{Number, Number, Dates.Date, AbstractVector{Dates.Date}}","page":"Home","title":"Loan.installment","text":"installment(amount::Number,rate::Number,initialDate::Dates.Date,dueDates::AbstractVector{Dates.Date};period=Dates.Month)\n\nReturn the constant payment value required to settle a loan (amount) with a fixed rate with dueDates payments flow\n\n\n\n\n\n","category":"method"},{"location":"#Loan.installment-Union{Tuple{T}, Tuple{Number, Number, Dates.Date, Number}, Tuple{Number, Number, Dates.Date, Number, Union{Symbol, T}}} where T<:BusinessDays.HolidayCalendar","page":"Home","title":"Loan.installment","text":"installment(amount::Number,rate::Number,initialDate::Dates.Date,nper::Number,calendar::Union{Symbol,T}=BusinessDays.NullHolidayCalendar();period=Dates.Month) where T<: BusinessDays.HolidayCalendar\n\nReturn the constant payment value required to settle a loan (amount) with a fixed rate agreed at initialDate in nper payments\n\n\n\n\n\n","category":"method"},{"location":"#Loan.merge_loan-Tuple{Loan.AbstractLoan, Loan.AbstractLoan}","page":"Home","title":"Loan.merge_loan","text":"merge_loan(a::LoanAgreement,b::LoanAgreement)\n\nMerge two LoanAgreements a an a, resulting a new LoanAgreement which cash flow is equals to the sum of a and b. \n\n\n\n\n\n","category":"method"},{"location":"#Loan.present_value-NTuple{4, Any}","page":"Home","title":"Loan.present_value","text":"present_value(amount,rate,dueDate,presentDate;period=Dates.Month)\n\nReturn the value at presentDate of value of the amount due to dueDate discounted by the rate.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.present_value-Tuple{Any, Any, Any}","page":"Home","title":"Loan.present_value","text":"present_value(amount,rate,dueDate;period=Dates.Month)\n\nReturn the present value of the amount due to dueDate discounted by the rate.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.total_month_installment-Union{Tuple{T}, Tuple{T, Dates.Date}} where T<:Loan.LoanAgreement","page":"Home","title":"Loan.total_month_installment","text":"total_month_installment(loan::T, month::Dates.Date) where T<:LoanAgreement\n\nThe total value due of the loan by the month\n\n\n\n\n\n","category":"method"},{"location":"#Loan.value_at_date-Tuple{Loan.AbstractLoan, Dates.Date}","page":"Home","title":"Loan.value_at_date","text":"value_at_date(loan::LoanAgreement,date::Dates.Date)\n\nReturn the present value of the non-paid plus the amount paid until the date of a loan agreement.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.value_at_date-Tuple{Loan.Installment, Dates.Date}","page":"Home","title":"Loan.value_at_date","text":"value_at_date(installment::Installment,date::Dates.Date)\n\nReturn the present value of the non-paid installment or the paid value before the date.\n\n\n\n\n\n","category":"method"},{"location":"#Loan.value_by_pmt-Tuple{Number, Number, Number, Dates.Date, Dates.Date}","page":"Home","title":"Loan.value_by_pmt","text":"value_by_pmt(pmt::Number,nper::Number,rate::Number,initialDate::Dates.Date,firstDueDate::Dates.Date;calendar=BusinessDays.NullHolidayCalendar(),period=Dates.Month)\n\nWhich value results in a regular payments of pmt if paid in n constant installments discounted by the rate. \n\n\n\n\n\n","category":"method"}]
}
